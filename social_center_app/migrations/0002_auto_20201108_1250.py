# Generated by Django 3.1.2 on 2020-11-08 09:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('social_center_app', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='facilities',
            name='economic_condition',
        ),
        migrations.RemoveField(
            model_name='socialpayment',
            name='economic_condition',
        ),
        migrations.RemoveField(
            model_name='sourceincome',
            name='economic_condition',
        ),
        migrations.RemoveField(
            model_name='husbandinformation',
            name='address',
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualAddressApNum',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Номер квартиры (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualAddressCity',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Населенный пункт (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualAddressHouseNum',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Дом (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualAddressIndex',
            field=models.IntegerField(blank=True, default=None, null=True, verbose_name='Почтовый индекс (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualAddressStreet',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Улица (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='actualMunicipalDistrict',
            field=models.IntegerField(blank=True, choices=[(1, 'Юго-Запад'), (2, 'Южно-Приморский'), (3, 'Сосновая Поляна'), (4, 'Урицк'), (5, 'Константиновское'), (6, 'Горелово'), (7, 'г.Красное Село')], default=None, null=True, verbose_name='Муниципальный округ (АФП)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationAddressApNum',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Номер квартиры (АР)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationAddressCity',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Населенный пункт (АР)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationAddressHouseNum',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Дом (АР)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationAddressIndex',
            field=models.IntegerField(blank=True, default=None, null=True, verbose_name='Почтовый индекс (АР)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationAddressStreet',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='Улица (АР)'),
        ),
        migrations.AddField(
            model_name='husbandinformation',
            name='registrationMunicipalDistrict',
            field=models.IntegerField(blank=True, choices=[(1, 'Юго-Запад'), (2, 'Южно-Приморский'), (3, 'Сосновая Поляна'), (4, 'Урицк'), (5, 'Константиновское'), (6, 'Горелово'), (7, 'г.Красное Село')], default=None, null=True, verbose_name='Муниципальный округ (АР)'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='alimony',
            field=models.IntegerField(blank=True, choices=[(1, 'да'), (2, 'нет')], null=True, verbose_name='Алименты/нотариальное соглашение о содержании ребенка'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='basis_facilities',
            field=models.IntegerField(blank=True, choices=[(1, 'да'), (2, 'нет')], null=True, verbose_name='Основания для льгот'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='basis_payments',
            field=models.IntegerField(blank=True, choices=[(1, 'нет оснований для оформления выплаты'), (2, 'имеется право на выплату'), (3, 'требует оформления'), (4, 'находится в стадии оформления'), (5, 'выплачивается')], null=True, verbose_name='Основания для выплаты'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='basis_social_payments',
            field=models.IntegerField(blank=True, choices=[(1, 'нет оснований для оформления выплаты'), (2, 'имеется право на выплату'), (3, 'требует оформления'), (4, 'находится в стадии оформления'), (5, 'выплачивается')], null=True, verbose_name='Основания для социальных выплат'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='benefits',
            field=models.IntegerField(blank=True, choices=[(1, 'да'), (2, 'нет')], null=True, verbose_name='Льготы по коммунальным услугам'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='material_means',
            field=models.IntegerField(blank=True, choices=[(1, 'родственниками'), (2, 'партнером'), (3, 'мужем')], null=True, verbose_name='Предоставление материальных средств'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='pension',
            field=models.IntegerField(blank=True, choices=[(1, 'по старости'), (2, 'по потере кормильца'), (3, 'по инвалидности')], null=True, verbose_name='Пенсия'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='reason',
            field=models.TextField(blank=True, null=True, verbose_name='Причина,по которой не оформлены льготы'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='rent',
            field=models.IntegerField(blank=True, choices=[(1, 'комнаты'), (2, 'оборудования'), (3, 'участка')], null=True, verbose_name='Сдача в аренду'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='right_facilities',
            field=models.IntegerField(blank=True, choices=[(1, 'да'), (2, 'нет')], null=True, verbose_name='Имеет право на льготы (указать)'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='salary',
            field=models.IntegerField(blank=True, choices=[(1, 'постоянно'), (2, 'переодически'), (3, 'редко')], null=True, verbose_name='Заработная плата'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='stage_registration_facilities',
            field=models.IntegerField(blank=True, choices=[(1, 'оформлено полностью'), (2, 'частично оформлено'), (3, 'в стадии оформления'), (4, 'не оформлено')], null=True, verbose_name='Стадия оформления льгот'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='type_benefit_payment',
            field=models.IntegerField(blank=True, choices=[(1, 'единовременная компенсационная выплата при рождении ребенка (СПБ)'), (2, 'единовременное пособие при рождении ребенка (РФ)'), (3, 'ежемесячное пособие на ребёнка в возрасте от рождения до 1 года (СПб)'), (4, 'ежемесячное пособие на ребёнка в возрасте от 1 года до 7 лет (СПб)'), (5, 'ежемесячное пособие на детей школьного возраста (СПб)'), (6, 'пособие по беременности и родам (РФ)'), (7, 'единовременное пособие женщинам, вставшим на учёт в ранние сроки (РФ)'), (8, 'ежемесячное пособие по уходу за ребёнком (РФ)'), (9, 'сертификат на получение материнского (семейного) капитала')], null=True, verbose_name='Вид пособия/компенсационной выплаты'),
        ),
        migrations.AddField(
            model_name='socialeconomiccondition',
            name='type_social_payment',
            field=models.IntegerField(blank=True, choices=[(1, 'единовременные выплаты'), (2, 'ежемесячные выплаты'), (3, 'государственная социальная помощь,доплата до прожиточного минимума'), (4, 'государственная социальная помощь в трудной жизненной ситуации')], null=True, verbose_name='Вид социальной выплаты'),
        ),
        migrations.AlterField(
            model_name='chronicdisease',
            name='whoKnow',
            field=models.IntegerField(blank=True, choices=[(1, 'да'), (2, 'нет'), (3, 'подозревают'), (4, 'планирует рассказать')], null=True, verbose_name='Знают ли члены семьи о ВИЧ-статусе клиента'),
        ),
        migrations.DeleteModel(
            name='ChildAllowanceAndCompensation',
        ),
        migrations.DeleteModel(
            name='Facilities',
        ),
        migrations.DeleteModel(
            name='SocialPayment',
        ),
        migrations.DeleteModel(
            name='SourceIncome',
        ),
    ]
